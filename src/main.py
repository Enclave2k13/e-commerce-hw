"""–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞."""

import os

from category import Category
from data_loader import load_data_from_json


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ json."""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON...\n")

    try:
        # –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ products.json
        current_dir = os.path.dirname(__file__)
        project_root = os.path.dirname(current_dir)  # –ø–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ
        json_path = os.path.join(project_root, "products.json")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        categories = load_data_from_json(json_path)

        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}")
        print(f"üìä –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ: {Category.category_count}")
        print(f"üì¶ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {Category.product_count}")
        print("\n" + "=" * 50 + "\n")

        # –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        for i, category in enumerate(categories, 1):
            print(f"üè∑Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è {i}: {category.name}")
            print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {category.description}")
            print(f"üõçÔ∏è  –¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {len(category.products)}")

            for j, product in enumerate(category.products, 1):
                print(f"   {j}. {product.name}")
                print(f"      üí∞ –¶–µ–Ω–∞: {product.price} —Ä—É–±.")
                print(f"      üì¶ –í –Ω–∞–ª–∏—á–∏–∏: {product.quantity} —à—Ç.")
                print(f"      üìã –û–ø–∏—Å–∞–Ω–∏–µ: {product.description}")
            print("-" * 30)

    except FileNotFoundError:
        print("‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª products.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")


if __name__ == "__main__":
    main()
